package java_re;

/**
 * \  将下一字标记为特殊字符，文本，反向引用或八进制转义符
 * ^  匹配输入字符串开始的位置
 * $  匹配输入字符串结尾的位置
 * *  零次或多次匹配前面的字符或子表达式
 * +  一次或多次匹配前面的字符或子表达式
 * ?  零次或一次匹配前面的字符或子表达式
 * {n}  n是非负整数 正好匹配n次
 * {n,}  n是非负整数,至少匹配n次
 * {n, m}  m和n是非负整数，至少n次，至多m次
 * ? 紧随任何其他限定符，匹配模式是 非贪心的
 * (pattern) 匹配pattern并捕获该匹配的子表达式
 * (?:pattern)  匹配pattern但不捕获该匹配的子表达式，
 * (?=pattern)  执行正向预测先行搜索的子表达式，该表达式匹配pattern的字符串的起始点的字符串  在匹配字符后面
 * (?!pattern)  执行反向预测先行搜索的子表达式,该表达式匹配不处于匹配pattern的字符串的起始点的搜索字符串  在匹配字符前面
 * (?<=exp)  正后向查找分组
 * (?<!exp)  正负向查找分组一样
 * x|y  匹配x或y
 * [xyz]  字符集，匹配包含的任一字符
 * [^xyz]  反向字符集，匹配未包含的任何字符
 * [a-z]  字符范围，匹配指定范围内的任何字符
 * [^a-z]  字符范围，匹配指定范围内的不存在的字符
 * \b  匹配一个子边界，即字与空格间的位置
 * \B  非子边界匹配
 * \cx  匹配x指示的控制字符
 * \d  数字字符匹配
 * \D  非数字字符匹配
 * \f  换页符匹配
 * \n  换行符匹配
 * \r  匹配一个回车符
 * \s  匹配任何空白字符
 * \S  匹配任何非空白字符
 * \t  制表符匹配
 * \v  垂直制表符匹配
 * \w  匹配任何子类字符
 * \W  与任何非单词字符匹配
 * \xn  匹配n，此处的n是一个以六进制转译码
 * \num  匹配num，此处的num是一个正整数
 * \n  表示一个八进制转义码或反向引用
 * \nm  表示一个八进制转译码或反向引用
 * \nml 当n是八进制数
 * \\un 匹配n，n是以四位十六进制数表示的unicode字符
 */
public class basic_grammar {
}
